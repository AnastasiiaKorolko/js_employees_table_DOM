{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,EAAU,SAAS,gBAAgB,CAAC,MACpC,EAAY,SAAS,aAAa,CAAC,eACnC,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAW,EAAU,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAEtC,EAAY,CAAC,EAEnB,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,eAO3B,EAAA,EAAW,AAAiB,QADb,CAAA,CAAS,CALlB,EAK+B,EAAI,MAA/C,EAC0C,OAAS,MAEnD,CAAS,CARG,EAQU,CAAG,EAEzB,EAAK,IAAI,CAAC,SAAC,CAAA,CAAM,CAAjB,EACE,IAAM,EAAQ,EAAK,KAAK,CAXd,EAW2B,CAAC,WAAW,CAC3C,EAAQ,EAAK,KAAK,CAZd,EAY2B,CAAC,WAAW,OAEjD,AAAI,AAAa,QAAb,EACK,EAAM,aAAa,CAAC,EAAO,KAAA,EAAW,CAAE,QAAS,CAAA,CAAK,GAEtD,EAAM,aAAa,CAAC,EAAO,KAAA,EAAW,CAAE,QAAS,CAAA,CAAK,EAEjE,GAEA,EAAU,SAAS,CAAG,GACtB,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAU,WAAW,CAAC,E,EArB5C,EACF,GAuBA,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,EAAI,gBAAgB,CAAC,QAAS,WAC5B,EAAK,OAAO,CAAC,SAAC,CAAd,EAAoB,OAAA,EAAE,SAAS,CAAC,MAAM,CAAC,S,GACvC,EAAI,SAAS,CAAC,GAAG,CAAC,SACpB,EACF,GAEA,IAAM,EAAO,SAAS,aAAa,CAAC,QAEpC,EAAK,SAAS,CAAC,GAAG,CAAC,qBAEnB,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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar headers = document.querySelectorAll(\"th\");\nvar tableBody = document.querySelector(\"table tbody\");\nvar rows = _to_consumable_array(tableBody.querySelectorAll(\"tr\"));\nvar sortOrder = {};\nheaders.forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        sortTable(index);\n    });\n});\nfunction sortTable(columnIndex) {\n    var currentOrder = sortOrder[columnIndex] || \"none\";\n    var newOrder = currentOrder === \"asc\" ? \"desc\" : \"asc\";\n    sortOrder[columnIndex] = newOrder;\n    rows.sort(function(rowA, rowB) {\n        var cellA = rowA.cells[columnIndex].textContent;\n        var cellB = rowB.cells[columnIndex].textContent;\n        if (newOrder === \"asc\") return cellA.localeCompare(cellB, undefined, {\n            numeric: true\n        });\n        else return cellB.localeCompare(cellA, undefined, {\n            numeric: true\n        });\n    });\n    tableBody.innerHTML = \"\";\n    rows.forEach(function(row) {\n        return tableBody.appendChild(row);\n    });\n}\nrows.forEach(function(row) {\n    row.addEventListener(\"click\", function() {\n        rows.forEach(function(r) {\n            return r.classList.remove(\"active\");\n        });\n        row.classList.add(\"active\");\n    });\n});\nvar form = document.createElement(\"form\");\nform.classList.add(\"new-employee-form\");\nvar nameLabel = document.createElement(\"label\");\nnameLabel.textContent = \"Name: \";\nvar inputName = document.createElement(\"input\");\ninputName.name = \"name\";\ninputName.type = \"text\";\ninputName.setAttribute(\"data-qa\", \"name\");\ninputName.required = true;\nnameLabel.appendChild(inputName);\nform.appendChild(nameLabel);\nvar positionLabel = document.createElement(\"label\");\npositionLabel.textContent = \"Position: \";\nvar positionInput = document.createElement(\"input\");\npositionInput.name = \"position\";\npositionInput.type = \"text\";\npositionInput.setAttribute(\"data-qa\", \"position\");\npositionInput.required = true;\npositionLabel.appendChild(positionInput);\nform.appendChild(positionLabel);\nvar officeLabel = document.createElement(\"label\");\nofficeLabel.textContent = \"Office: \";\nvar officeSelect = document.createElement(\"select\");\nofficeSelect.name = \"office\";\nofficeSelect.setAttribute(\"data-qa\", \"office\");\nofficeSelect.required = true;\n[\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n].forEach(function(city) {\n    var option = document.createElement(\"option\");\n    option.value = city;\n    option.textContent = city;\n    officeSelect.appendChild(option);\n});\nofficeLabel.appendChild(officeSelect);\nform.appendChild(officeLabel);\nvar ageLabel = document.createElement(\"label\");\nageLabel.textContent = \"Age: \";\nvar ageInput = document.createElement(\"input\");\nageInput.name = \"age\";\nageInput.type = \"number\";\nageInput.setAttribute(\"data-qa\", \"age\");\nageInput.required = true;\nageLabel.appendChild(ageInput);\nform.appendChild(ageLabel);\nvar salaryLabel = document.createElement(\"label\");\nsalaryLabel.textContent = \"Salary: \";\nvar salaryInput = document.createElement(\"input\");\nsalaryInput.name = \"salary\";\nsalaryInput.type = \"number\";\nsalaryInput.setAttribute(\"data-qa\", \"salary\");\nsalaryInput.required = true;\nsalaryLabel.appendChild(salaryInput);\nform.appendChild(salaryLabel);\nvar button = document.createElement(\"button\");\nbutton.textContent = \"Save to table\";\nbutton.type = \"submit\";\nform.appendChild(button);\ndocument.body.appendChild(form);\nvar notificationContainer = document.createElement(\"div\");\nnotificationContainer.setAttribute(\"data-qa\", \"notification\");\ndocument.body.appendChild(notificationContainer);\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    notificationContainer.textContent = \"\";\n    notificationContainer.className = \"\";\n    var nam = form.elements.name.value;\n    var position = form.elements.position.value;\n    var office = form.elements.office.value;\n    var age = parseInt(form.elements.age.value, 10);\n    var salary = parseFloat(form.elements.salary.value);\n    if (position.length < 3) {\n        showNotification(\"Position must be at least 3 characters long.\", \"error\");\n        return;\n    }\n    if (isNaN(salary) || salary <= 0) {\n        showNotification(\"Salary must be a positive number.\", \"error\");\n        return;\n    }\n    if (nam.length < 4) {\n        showNotification(\"Name must be at least 4 characters long.\", \"error\");\n        return;\n    }\n    if (age < 18 || age > 90) {\n        showNotification(\"Age must be between 18 and 90.\", \"error\");\n        return;\n    }\n    var formattedSalary = salary.toLocaleString(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n    });\n    var tbody = document.querySelector(\"table tbody\");\n    var row = tbody.insertRow();\n    row.insertCell().textContent = nam;\n    row.insertCell().textContent = position;\n    row.insertCell().textContent = office;\n    row.insertCell().textContent = age;\n    row.insertCell().textContent = formattedSalary;\n    showNotification(\"New employee added to the table.\", \"success\");\n    form.reset();\n});\nfunction showNotification(message, type) {\n    notificationContainer.textContent = message;\n    notificationContainer.className = type;\n}\n\n//# sourceMappingURL=index.8099be8d.js.map\n","'use strict';\n\nconst headers = document.querySelectorAll('th');\nconst tableBody = document.querySelector('table tbody');\nconst rows = [...tableBody.querySelectorAll('tr')];\n\nconst sortOrder = {};\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    sortTable(index);\n  });\n});\n\nfunction sortTable(columnIndex) {\n  const currentOrder = sortOrder[columnIndex] || 'none';\n  const newOrder = currentOrder === 'asc' ? 'desc' : 'asc';\n\n  sortOrder[columnIndex] = newOrder;\n\n  rows.sort((rowA, rowB) => {\n    const cellA = rowA.cells[columnIndex].textContent;\n    const cellB = rowB.cells[columnIndex].textContent;\n\n    if (newOrder === 'asc') {\n      return cellA.localeCompare(cellB, undefined, { numeric: true });\n    } else {\n      return cellB.localeCompare(cellA, undefined, { numeric: true });\n    }\n  });\n\n  tableBody.innerHTML = '';\n  rows.forEach((row) => tableBody.appendChild(row));\n}\n\nrows.forEach((row) => {\n  row.addEventListener('click', () => {\n    rows.forEach((r) => r.classList.remove('active'));\n    row.classList.add('active');\n  });\n});\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nconst nameLabel = document.createElement('label');\n\nnameLabel.textContent = 'Name: ';\n\nconst inputName = document.createElement('input');\n\ninputName.name = 'name';\ninputName.type = 'text';\ninputName.setAttribute('data-qa', 'name');\ninputName.required = true;\nnameLabel.appendChild(inputName);\nform.appendChild(nameLabel);\n\nconst positionLabel = document.createElement('label');\n\npositionLabel.textContent = 'Position: ';\n\nconst positionInput = document.createElement('input');\n\npositionInput.name = 'position';\npositionInput.type = 'text';\npositionInput.setAttribute('data-qa', 'position');\npositionInput.required = true;\npositionLabel.appendChild(positionInput);\nform.appendChild(positionLabel);\n\nconst officeLabel = document.createElement('label');\n\nofficeLabel.textContent = 'Office: ';\n\nconst officeSelect = document.createElement('select');\n\nofficeSelect.name = 'office';\nofficeSelect.setAttribute('data-qa', 'office');\nofficeSelect.required = true;\n\n[\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n].forEach((city) => {\n  const option = document.createElement('option');\n\n  option.value = city;\n  option.textContent = city;\n  officeSelect.appendChild(option);\n});\nofficeLabel.appendChild(officeSelect);\nform.appendChild(officeLabel);\n\nconst ageLabel = document.createElement('label');\n\nageLabel.textContent = 'Age: ';\n\nconst ageInput = document.createElement('input');\n\nageInput.name = 'age';\nageInput.type = 'number';\nageInput.setAttribute('data-qa', 'age');\nageInput.required = true;\nageLabel.appendChild(ageInput);\nform.appendChild(ageLabel);\n\nconst salaryLabel = document.createElement('label');\n\nsalaryLabel.textContent = 'Salary: ';\n\nconst salaryInput = document.createElement('input');\n\nsalaryInput.name = 'salary';\nsalaryInput.type = 'number';\nsalaryInput.setAttribute('data-qa', 'salary');\nsalaryInput.required = true;\nsalaryLabel.appendChild(salaryInput);\nform.appendChild(salaryLabel);\n\nconst button = document.createElement('button');\n\nbutton.textContent = 'Save to table';\nbutton.type = 'submit';\nform.appendChild(button);\ndocument.body.appendChild(form);\n\nconst notificationContainer = document.createElement('div');\n\nnotificationContainer.setAttribute('data-qa', 'notification');\ndocument.body.appendChild(notificationContainer);\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n  notificationContainer.textContent = '';\n  notificationContainer.className = '';\n\n  const nam = form.elements.name.value;\n  const position = form.elements.position.value;\n  const office = form.elements.office.value;\n  const age = parseInt(form.elements.age.value, 10);\n  const salary = parseFloat(form.elements.salary.value);\n\n  if (position.length < 3) {\n    showNotification('Position must be at least 3 characters long.', 'error');\n\n    return;\n  }\n\n  if (isNaN(salary) || salary <= 0) {\n    showNotification('Salary must be a positive number.', 'error');\n\n    return;\n  }\n\n  if (nam.length < 4) {\n    showNotification('Name must be at least 4 characters long.', 'error');\n\n    return;\n  }\n\n  if (age < 18 || age > 90) {\n    showNotification('Age must be between 18 and 90.', 'error');\n\n    return;\n  }\n\n  const formattedSalary = salary.toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  });\n\n  const tbody = document.querySelector('table tbody');\n  const row = tbody.insertRow();\n\n  row.insertCell().textContent = nam;\n  row.insertCell().textContent = position;\n  row.insertCell().textContent = office;\n  row.insertCell().textContent = age;\n  row.insertCell().textContent = formattedSalary;\n\n  showNotification('New employee added to the table.', 'success');\n  form.reset();\n});\n\nfunction showNotification(message, type) {\n  notificationContainer.textContent = message;\n  notificationContainer.className = type;\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","headers","document","querySelectorAll","tableBody","querySelector","rows","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sortOrder","forEach","header","index","addEventListener","newOrder","currentOrder","sort","rowA","rowB","cellA","cells","textContent","cellB","localeCompare","undefined","numeric","innerHTML","row","appendChild","r","classList","remove","add","form","createElement","nameLabel","inputName","type","setAttribute","required","positionLabel","positionInput","officeLabel","officeSelect","city","option","value","ageLabel","ageInput","salaryLabel","salaryInput","button","body","notificationContainer","showNotification","message","className","e","preventDefault","nam","elements","position","office","age","parseInt","salary","parseFloat","isNaN","formattedSalary","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","tbody","insertRow","insertCell","reset"],"version":3,"file":"index.8099be8d.js.map"}